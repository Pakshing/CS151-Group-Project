Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_.xml	(date 1607227284569)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_.xml	(date 1607227284569)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]" date="1606771045379" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/30/2020 1:17 PM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]/shelved.patch	(date 1607227254488)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]/shelved.patch	(date 1607227254488)
@@ -0,0 +1,18 @@
+Index: src/view/View.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.HitMessage;\r\nimport controller.Message;\r\nimport controller.NewGameMessage;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.concurrent.BlockingQueue;\r\n\r\npublic class View {\r\n    private JFrame gameFrame;\r\n    private BlockingQueue<Message> queue;\r\n\r\n    public static View init(BlockingQueue<Message> queue) {\r\n        // Create object of type view\r\n        return new View(queue);\r\n    }\r\n\r\n    private View(BlockingQueue<Message> queue) {\r\n        this.queue = queue;\r\n        // TODO:\r\n        // you should initalize JFrame and show it,\r\n        // JFrame should be able to add Messages to queue\r\n        // JFrame can be in a separate class or created JFrame with all the elements in this class\r\n        // or you can make View a subclass of JFrame by extending it\r\n        gameFrame = new JFrame();\r\n\r\n        JButton newGame = new JButton(\"New Game\");\r\n        JButton hitButton = new JButton(\"hit\");\r\n\r\n        newGame.addActionListener(event -> {\r\n            try {\r\n                this.queue.put(new NewGameMessage()); // <--- adding NewGame message to the queue\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        hitButton.addActionListener(event -> {\r\n            try {\r\n                this.queue.put(new HitMessage()); // <--- adding Hit message to the queue\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        // add everything and set layout and other standard JFrame settings\r\n        gameFrame.add(newGame);\r\n        gameFrame.add(hitButton);\r\n        gameFrame.pack();\r\n        gameFrame.setLayout(new FlowLayout());\r\n        gameFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        gameFrame.setVisible(true);\r\n    }\r\n\r\n\r\n    public void change() {\r\n        // TODO: do all the updates and repaint\r\n        //gameFrame.repaint();\r\n    }\r\n\r\n    public void dispose() {\r\n        // TODO: clear all the resources\r\n        // for example, gameFrame.dispose();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/view/View.java	(revision 10ec970e8631c3ea44924d7075df9a84c3db2385)
++++ src/view/View.java	(date 1606358670076)
+@@ -20,7 +20,7 @@
+     private View(BlockingQueue<Message> queue) {
+         this.queue = queue;
+         // TODO:
+-        // you should initalize JFrame and show it,
++        // you should initialize JFrame and show it,
+         // JFrame should be able to add Messages to queue
+         // JFrame can be in a separate class or created JFrame with all the elements in this class
+         // or you can make View a subclass of JFrame by extending it
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_1.xml	(date 1607227284537)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM__Default_Changelist_1.xml	(date 1607227284537)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]1" date="1606771072625" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/30/2020 1:17 PM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]1/shelved.patch	(date 1607227254467)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_30_2020_1_17_PM_[Default_Changelist]1/shelved.patch	(date 1607227254467)
@@ -0,0 +1,18 @@
+Index: src/view/View.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package view;\r\n\r\nimport controller.HitMessage;\r\nimport controller.Message;\r\nimport controller.NewGameMessage;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.util.concurrent.BlockingQueue;\r\n\r\npublic class View {\r\n    private JFrame gameFrame;\r\n    private BlockingQueue<Message> queue;\r\n\r\n    public static View init(BlockingQueue<Message> queue) {\r\n        // Create object of type view\r\n        return new View(queue);\r\n    }\r\n\r\n    private View(BlockingQueue<Message> queue) {\r\n        this.queue = queue;\r\n        // TODO:\r\n        // you should initalize JFrame and show it,\r\n        // JFrame should be able to add Messages to queue\r\n        // JFrame can be in a separate class or created JFrame with all the elements in this class\r\n        // or you can make View a subclass of JFrame by extending it\r\n        gameFrame = new JFrame();\r\n\r\n        JButton newGame = new JButton(\"New Game\");\r\n        JButton hitButton = new JButton(\"hit\");\r\n\r\n        newGame.addActionListener(event -> {\r\n            try {\r\n                this.queue.put(new NewGameMessage()); // <--- adding NewGame message to the queue\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        hitButton.addActionListener(event -> {\r\n            try {\r\n                this.queue.put(new HitMessage()); // <--- adding Hit message to the queue\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        });\r\n\r\n        // add everything and set layout and other standard JFrame settings\r\n        gameFrame.add(newGame);\r\n        gameFrame.add(hitButton);\r\n        gameFrame.pack();\r\n        gameFrame.setLayout(new FlowLayout());\r\n        gameFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        gameFrame.setVisible(true);\r\n    }\r\n\r\n\r\n    public void change() {\r\n        // TODO: do all the updates and repaint\r\n        //gameFrame.repaint();\r\n    }\r\n\r\n    public void dispose() {\r\n        // TODO: clear all the resources\r\n        // for example, gameFrame.dispose();\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- src/view/View.java	(revision 10ec970e8631c3ea44924d7075df9a84c3db2385)
++++ src/view/View.java	(date 1606771045441)
+@@ -20,7 +20,7 @@
+     private View(BlockingQueue<Message> queue) {
+         this.queue = queue;
+         // TODO:
+-        // you should initalize JFrame and show it,
++        // you should initialize JFrame and show it,
+         // JFrame should be able to add Messages to queue
+         // JFrame can be in a separate class or created JFrame with all the elements in this class
+         // or you can make View a subclass of JFrame by extending it
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_5_25_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_5_25_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_5_26_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_5_26_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2020_9_29_AM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2020_9_29_AM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_4_2020_4_15_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_4_2020_4_15_PM__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_12_44_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_5_2020_12_44_PM__Default_Changelist_.xml
